{"version":3,"sources":["assets/images/search.svg","assets/images/circle.svg","assets/images/pull-request.svg","assets/images/issue-closed.svg","assets/images/close.svg","SearchPage.js","components/Issue.js","ResultsPage.js","IssueExplorer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SearchPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","id","className","onSubmit","autoComplete","type","src","MagIcon","alt","value","placeholder","onChange","Component","Issue","issue","labels","map","label","i","key","Bullet","name","split","pop","hasOwnProperty","PR","Closed","body","length","_renderStatusSymbol","title","_renderIssueBody","_renderLabels","ResultsPage","selectedState","_handleFilterSelect","bind","assertThisInitialized","e","target","document","getElementById","setState","issuesJSON","status","item","components_Issue","node_id","submittedText","Exit","onClick","badUrl","_renderErrorMessage","_renderIssues","IssueExplorer","isMinimized","textInputVal","_handleChange","_handleSubmit","_handleExit","textEvent","event","blur","_retrieveIssuesJSON","preventDefault","includes","_this2","repoPath","_retrieveRepoPath","fetch","then","response","json","error","console","warn","catch","src_SearchPage","src_ResultsPage","App","src_IssueExplorer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gTCoCzBC,cA/Bb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,GAFIP,wEAOjB,OACEQ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,cAAcC,UAAU,WAC9BJ,EAAAC,EAAAC,cAAA,KAAGC,GAAG,qBAAN,uBAGAH,EAAAC,EAAAC,cAAA,QAAMC,GAAG,cAAcE,SAAUV,KAAKJ,MAAMc,SAAUC,aAAa,OACjEN,EAAAC,EAAAC,cAAA,OAAKC,GAAG,eACNH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,oBACNH,EAAAC,EAAAC,cAAA,SAAOC,GAAG,gBAAgBI,KAAK,QAAQC,IAAKC,IAASC,IAAI,SAE3DV,EAAAC,EAAAC,cAAA,SACEC,GAAG,aACHI,KAAK,OACLI,MAAOhB,KAAKJ,MAAMoB,MAClBC,YAAY,iCACZC,SAAUlB,KAAKJ,MAAMsB,qBAvBVC,8EC+EVC,cA3Eb,SAAAA,EAAYxB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoB,IACjBvB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsB,GAAAjB,KAAAH,KAAMJ,KACDQ,MAAQ,GAFIP,+EAOjB,OAAOG,KAAKJ,MAAMyB,MAAMC,OAAOC,IAAI,SAACC,EAAOC,GACzC,OACEpB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAmBiB,IAAKD,GACrCpB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAASI,IAAKc,IAAQZ,IAAI,MACzCV,EAAAC,EAAAC,cAAA,KAAGE,UAAU,cACVe,EAAMI,KAAKC,MAAM,KAAKC,wDAQ/B,MAA+B,SAA3B9B,KAAKJ,MAAMyB,MAAMjB,MAEfJ,KAAKJ,MAAMyB,MAAMU,eAAe,gBAEhC1B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBI,IAAKmB,IAAIjB,IAAI,MAGvC,KAIPV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBI,IAAKoB,IAAQlB,IAAI,iDAMpD,OAAIf,KAAKJ,MAAMyB,MAAMa,KAAKC,OAAS,EAE/B9B,EAAAC,EAAAC,cAAA,KAAGE,UAAU,cACVT,KAAKJ,MAAMyB,MAAMa,MAKpB7B,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAb,4DAQJ,OACEJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACZT,KAAKoC,uBAER/B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAeT,KAAKJ,MAAMyB,MAAMgB,SAGjDhC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACZT,KAAKsC,mBACNjC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACZT,KAAKuC,0BAnEEpB,8BC8FLqB,cA/Fb,SAAAA,EAAY5C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,IACjB3C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0C,GAAArC,KAAAH,KAAMJ,KACDQ,MAAQ,CACXqC,cAAe,OAEjB5C,EAAK6C,oBAAsB7C,EAAK6C,oBAAoBC,KAAzB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAD,KALVA,mFAQCgD,GACdA,EAAEC,OAAOtC,KAAOR,KAAKI,MAAMqC,gBAG/BM,SAASC,eAAehD,KAAKI,MAAMqC,eAAehC,UAAY,mBAC9DsC,SAASC,eAAeH,EAAEC,OAAOtC,IAAIC,UAAY,iBACjDT,KAAKiD,SAAS,CAACR,cAAeI,EAAEC,OAAOtC,oDAIvC,OACEH,EAAAC,EAAAC,cAAA,KAAGC,GAAG,sBAAN,iFAOF,GAAqC,IAAjCR,KAAKJ,MAAMsD,WAAWf,OACxB,OACE9B,EAAAC,EAAAC,cAAA,KAAGC,GAAG,sBAAN,yBAKJ,IAAM2C,EAASnD,KAAKI,MAAMqC,cAC1B,OAAOzC,KAAKJ,MAAMsD,WAAW3B,IAAI,SAAC6B,GAChC,MAAgB,QAAXD,GAAoBA,IAAWC,EAAKhD,OACzB,iBAAX+C,GACDC,EAAKrB,eAAe,iBACL,SAAfqB,EAAKhD,MAGHC,EAAAC,EAAAC,cAAC8C,EAAD,CAAOhC,MAAO+B,EAAM1B,IAAK0B,EAAKE,UAGzB,wCAMb,OACEjD,EAAAC,EAAAC,cAAA,OAAKC,GAAG,uBACNH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,kBACNH,EAAAC,EAAAC,cAAA,KAAGC,GAAG,gBAAN,uBAGAH,EAAAC,EAAAC,cAAA,KAAGC,GAAG,OACHR,KAAKJ,MAAM2D,gBAGhBlD,EAAAC,EAAAC,cAAA,OAAKC,GAAG,mBACNH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QACNH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,cAAcK,IAAK2C,IAAMC,QAASzD,KAAKJ,MAAM6D,QAAS1C,IAAI,UAEpEV,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBACNH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iBAAiBD,GAAG,MAAMiD,QAASzD,KAAK0C,qBAArD,cAGArC,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBAAmBD,GAAG,OAAOiD,QAASzD,KAAK0C,qBAAxD,eAGArC,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBAAmBD,GAAG,SAASiD,QAASzD,KAAK0C,qBAA1D,iBAGArC,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBAAkBD,GAAG,eAAeiD,QAASzD,KAAK0C,qBAA/D,kBAKA1C,KAAKJ,MAAM8D,OACX1D,KAAK2D,sBAC4B,IAAjC3D,KAAKJ,MAAMsD,WAAWf,OACtB9B,EAAAC,EAAAC,cAAA,KAAGC,GAAG,sBAAN,yBAGAH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBACLR,KAAK4D,0BAvFMzC,aC8GX0C,cA3Gb,SAAAA,EAAYjE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6D,IACjBhE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+D,GAAA1D,KAAAH,KAAMJ,KACDQ,MAAQ,CACX0D,aAAa,EACbC,aAAc,GACdR,cAAe,GACfL,WAAY,GACZQ,QAAQ,GAEV7D,EAAKmE,cAAgBnE,EAAKmE,cAAcrB,KAAnB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAD,KACrBA,EAAKoE,cAAgBpE,EAAKoE,cAActB,KAAnB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAD,KACrBA,EAAKqE,YAAcrE,EAAKqE,YAAYvB,KAAjB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAD,KAXFA,6EAcLsE,GACZnE,KAAKiD,SAAS,CAACc,aAAcI,EAAUrB,OAAO9B,8CAGlCoD,GACZrB,SAASC,eAAe,cAAcqB,OACtCtB,SAASC,eAAe,iBAAiBqB,OACzCtB,SAASC,eAAe,eAAexC,GAAK,qBAC5CuC,SAASC,eAAe,uBAAuBxC,GAAK,eACpDR,KAAKiD,SAAS,CACZa,aAAc9D,KAAKI,MAAM0D,YACzBP,cAAevD,KAAKI,MAAM2D,eAE5B/D,KAAKsE,sBACLF,EAAMG,uDAINvE,KAAKiD,SAAS,CACZc,aAAc,GACdR,cAAe,KAEjBR,SAASC,eAAe,sBAAsBxC,GAAK,cACnDuC,SAASC,eAAe,gBAAgBxC,GAAK,kEAI7C,GAAIR,KAAKI,MAAM2D,aAAaS,SAAS,cACnC,OAAOxE,KAAKI,MAAM2D,aAAalC,MAAM,eAAeC,MAGpD9B,KAAKiD,SAAS,CAACS,QAAQ,kDAKL,IAAAe,EAAAzE,KAGd0E,EAAW1E,KAAK2E,oBAGtBC,MAJgB,gCAIAF,EAFD,kCAIdG,KACC,SAACC,GAKC,OAAwB,MAApBA,EAAS3B,QACXsB,EAAKxB,SAAS,CAACS,QAAQ,IAChB,KAEPe,EAAKxB,SAAS,CAACS,QAAQ,IAElBoB,EAASC,UAGnBF,KACC,SAACC,GACGA,EAASE,MACXC,QAAQC,KAAK,SAAUJ,EAASE,OAEhCP,EAAKxB,SAAS,CACZC,WAAY4B,MAIjBK,MAAM,SAACH,GACNC,QAAQC,KAAK,UAAWF,sCAK1B,OACE3E,EAAAC,EAAAC,cAAA,OAAKC,GAAG,kBACNH,EAAAC,EAAAC,cAAC6E,EAAD,CACEpE,MAAOhB,KAAKI,MAAM2D,aAClB7C,SAAUlB,KAAKgE,cACftD,SAAUV,KAAKiE,gBAEjB5D,EAAAC,EAAAC,cAAC8E,EAAD,CACE5B,QAASzD,KAAKkE,YACdX,cAAevD,KAAKI,MAAMmD,cAC1BL,WAAYlD,KAAKI,MAAM8C,WACvBQ,OAAQ1D,KAAKI,MAAMsD,iBArGDvC,aCUbmE,mLARX,OACEjF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACgF,EAAD,cAJUpE,aCKEqE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzF,EAAAC,EAAAC,cAACwF,EAAD,MAAShD,SAASC,eAAe,SD2H3C,kBAAmBgD,WACrBA,UAAUC,cAAcC,MAAMrB,KAAK,SAAAsB,GACjCA,EAAaC","file":"static/js/main.521a7903.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.4d4782ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/circle.2d297b28.svg\";","module.exports = __webpack_public_path__ + \"static/media/pull-request.f7396a8d.svg\";","module.exports = __webpack_public_path__ + \"static/media/issue-closed.29eed3f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.49c09251.svg\";","import React, { Component } from 'react';\r\nimport MagIcon from './assets/images/search.svg';\r\nimport './css/SearchPage.css';\r\n\r\nclass SearchPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"search-page\" className=\"preload\">\r\n        <p id=\"search-page-title\">\r\n          GitHub Issue Viewer\r\n        </p>\r\n        <form id=\"search-form\" onSubmit={this.props.onSubmit} autoComplete=\"off\">\r\n          <div id=\"form-inputs\">\r\n            <div id=\"button-container\">\r\n              <input id=\"search-button\" type=\"image\" src={MagIcon} alt=\"Go!\"/>\r\n            </div>\r\n            <input\r\n              id=\"text-input\"\r\n              type=\"text\"\r\n              value={this.props.value}\r\n              placeholder=\"Paste a link to a GitHub repo!\"\r\n              onChange={this.props.onChange}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPage;\r\n","import React, { Component } from 'react';\r\nimport '../css/Issue.css';\r\n\r\nimport Bullet from '../assets/images/circle.svg';\r\nimport PR from '../assets/images/pull-request.svg';\r\nimport Closed from '../assets/images/issue-closed.svg';\r\n\r\nclass Issue extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  _renderLabels() {\r\n    return this.props.issue.labels.map((label, i) => {\r\n      return (\r\n        <div className=\"label-background\" key={i}>\r\n          <img className=\"bullet\" src={Bullet} alt=\"o\" />\r\n          <p className=\"label-name\">\r\n            {label.name.split(\":\").pop()}\r\n          </p>\r\n        </div>\r\n      );\r\n    })\r\n  }\r\n\r\n  _renderStatusSymbol() {\r\n    if (this.props.issue.state === \"open\") {\r\n      // We'll only mark PRs if they're open; otherwise label as closed\r\n      if (this.props.issue.hasOwnProperty(\"pull_request\")) {\r\n        return (\r\n          <img className=\"status-symbol\" src={PR} alt=\"P\"/>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      return (\r\n        <img className=\"status-symbol\" src={Closed} alt=\"C\"/>\r\n      );\r\n    }\r\n  }\r\n\r\n  _renderIssueBody() {\r\n    if (this.props.issue.body.length > 0) {\r\n      return (\r\n        <p className=\"issue-body\">\r\n          {this.props.issue.body}\r\n        </p>\r\n      );\r\n    } else {\r\n      return (\r\n        <p className=\"no-body\">\r\n          No description provided\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"issue\">\r\n        <div className=\"issue-header\">\r\n          <div className=\"issue-status\">\r\n            {this._renderStatusSymbol()}\r\n          </div>\r\n          <div className=\"title-container\">\r\n            <p className=\"issue-title\">{this.props.issue.title}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"issue-content\">\r\n          {this._renderIssueBody()}\r\n          <div className=\"issue-labels\">\r\n            {this._renderLabels()}\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Issue;\r\n","import React, { Component } from 'react';\r\nimport './css/ResultsPage.css';\r\nimport Issue from './components/Issue.js';\r\nimport Exit from './assets/images/close.svg';\r\n\r\nclass ResultsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedState: \"all\", // Default state of issues to be viewed\r\n    }\r\n    this._handleFilterSelect = this._handleFilterSelect.bind(this);\r\n  }\r\n\r\n  _handleFilterSelect(e) {\r\n    if (e.target.id === this.state.selectedState) {\r\n      return;\r\n    }\r\n    document.getElementById(this.state.selectedState).className = \"label-unselected\";\r\n    document.getElementById(e.target.id).className = \"label-selected\";\r\n    this.setState({selectedState: e.target.id});\r\n  }\r\n\r\n  _renderErrorMessage() {\r\n    return (\r\n      <p id=\"standalone-message\">\r\n        Please Enter a Valid GitHub Repo URL!\r\n      </p>\r\n    );\r\n  }\r\n\r\n  _renderIssues() {\r\n    if (this.props.issuesJSON.length === 0) {\r\n      return (\r\n        <p id=\"standalone-message\">\r\n          Nothing to show here.\r\n        </p>\r\n      );\r\n    }\r\n    const status = this.state.selectedState;\r\n    return this.props.issuesJSON.map((item) => {\r\n      if ((status === \"all\" || status === item.state) ||\r\n          (status === \"pull-request\" &&\r\n          item.hasOwnProperty(\"pull_request\") &&\r\n          item.state === \"open\")\r\n        ) {\r\n          return (\r\n            <Issue issue={item} key={item.node_id} />\r\n          );\r\n        } else {\r\n          return null;\r\n        }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"results-page-hidden\">\r\n        <div id=\"results-header\">\r\n          <p id=\"header-title\">\r\n            GitHub Issue Viewer\r\n          </p>\r\n          <p id=\"url\">\r\n            {this.props.submittedText}\r\n          </p>\r\n        </div>\r\n        <div id=\"results-content\">\r\n          <div id=\"exit\">\r\n            <img id=\"exit-button\" src={Exit} onClick={this.props.onClick} alt=\"Exit\" />\r\n          </div>\r\n          <div id=\"filter-labels\">\r\n            <p className=\"label-selected\" id=\"all\" onClick={this._handleFilterSelect}>\r\n              All Issues\r\n            </p>\r\n            <p className=\"label-unselected\" id=\"open\" onClick={this._handleFilterSelect}>\r\n              Open Issues\r\n            </p>\r\n            <p className=\"label-unselected\" id=\"closed\" onClick={this._handleFilterSelect}>\r\n              Closed Issues\r\n            </p>\r\n            <p className=\"label-unselected\"id=\"pull-request\" onClick={this._handleFilterSelect}>\r\n              Pull Requests\r\n            </p>\r\n          </div>\r\n          {\r\n            this.props.badUrl ?\r\n            this._renderErrorMessage() : \r\n            this.props.issuesJSON.length === 0 ?\r\n            <p id=\"standalone-message\">\r\n              Nothing to show here.\r\n            </p> :\r\n            <div id=\"issue-content\">\r\n              {this._renderIssues()}\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultsPage;\r\n","import React, { Component } from 'react';\r\n\r\nimport './css/SearchPage.css';\r\n\r\nimport SearchPage from './SearchPage.js';\r\nimport ResultsPage from './ResultsPage.js';\r\n\r\nclass IssueExplorer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isMinimized: false,\r\n      textInputVal: \"\",\r\n      submittedText: \"\",\r\n      issuesJSON: [],\r\n      badUrl: true,\r\n    }\r\n    this._handleChange = this._handleChange.bind(this);\r\n    this._handleSubmit = this._handleSubmit.bind(this);\r\n    this._handleExit = this._handleExit.bind(this);\r\n  }\r\n\r\n  _handleChange(textEvent) {\r\n    this.setState({textInputVal: textEvent.target.value})\r\n  }\r\n\r\n  _handleSubmit(event) {\r\n    document.getElementById(\"text-input\").blur();\r\n    document.getElementById(\"search-button\").blur();\r\n    document.getElementById(\"search-page\").id = \"search-page-hidden\";\r\n    document.getElementById(\"results-page-hidden\").id = \"results-page\";\r\n    this.setState({\r\n      isMinimized: !this.state.isMinimized,\r\n      submittedText: this.state.textInputVal,\r\n    });\r\n    this._retrieveIssuesJSON();\r\n    event.preventDefault();\r\n  }\r\n\r\n  _handleExit() {\r\n    this.setState({\r\n      textInputVal: \"\",\r\n      submittedText: \"\",\r\n    });\r\n    document.getElementById(\"search-page-hidden\").id = \"search-page\";\r\n    document.getElementById(\"results-page\").id = \"results-page-hidden\";\r\n  }\r\n\r\n  _retrieveRepoPath() {\r\n    if (this.state.textInputVal.includes(\"github.com\")) {\r\n      return this.state.textInputVal.split(\"github.com/\").pop();\r\n    } else {\r\n      // If it's not a github.com url, indicate as so\r\n      this.setState({badUrl: true});\r\n    }\r\n  }\r\n\r\n  // PAGINATION!!!\r\n  _retrieveIssuesJSON() {\r\n    // For testing; make this more general\r\n    const urlBase = \"https://api.github.com/repos/\"\r\n    const repoPath = this._retrieveRepoPath();\r\n    const params = \"/issues?state=all&per_page=100\"; // Default grab all issues\r\n\r\n    fetch(urlBase + repoPath + params)\r\n    // We'll send the GET request and check the status for bad URL\r\n    .then(\r\n      (response) => {\r\n        // Parse the header here and determine number of pages\r\n        // if (!response.headers.get(\"link\").indexOf(\"next\") > 0) {\r\n        //   this.setState({noMorePages: true});\r\n        // }\r\n        if (response.status !== 200) {\r\n          this.setState({badUrl: true});\r\n          return [];\r\n        } else {\r\n          this.setState({badUrl: false});\r\n        }\r\n        return response.json();\r\n    })\r\n    // By this point, we've had a successful GET\r\n    .then(\r\n      (response) => {\r\n      if (response.error) {\r\n        console.warn('Error!', response.error);\r\n      } else {\r\n        this.setState({\r\n          issuesJSON: response,\r\n        });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.warn('Error: ', error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"issue-explorer\">\r\n        <SearchPage\r\n          value={this.state.textInputVal}\r\n          onChange={this._handleChange}\r\n          onSubmit={this._handleSubmit}\r\n        />\r\n        <ResultsPage\r\n          onClick={this._handleExit}\r\n          submittedText={this.state.submittedText}\r\n          issuesJSON={this.state.issuesJSON}\r\n          badUrl={this.state.badUrl}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IssueExplorer;\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport IssueExplorer from './IssueExplorer.js';\n\nimport './css/SearchPage.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <IssueExplorer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}